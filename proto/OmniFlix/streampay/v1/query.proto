syntax = "proto3";
package OmniFlix.streampay.v1;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "OmniFlix/streampay/v1/streampay.proto";
import "OmniFlix/streampay/v1/params.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/OmniFlix/streampay/x/streampay/types";

// Query defines the gRPC querier service.
service Query {
  rpc StreamingPayments(QueryStreamPaymentsRequest) returns (QueryStreamPaymentsResponse) {
    option (google.api.http).get = "/omniflix/streampay/v1/streaming-payments";
  }
  rpc StreamingPayment(QueryStreamPaymentRequest) returns (QueryStreamPaymentResponse) {
    option (google.api.http).get = "/omniflix/streampay/v1/streaming-payments/{id}";
  }
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/omniflix/streampay/v1/params";
  }
}

message QueryStreamPaymentsRequest {
  string sender = 1;
  string recipient = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryStreamPaymentsResponse {
  repeated StreamPayment                 stream_payments = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"stream_payments\""
  ];
  cosmos.base.query.v1beta1.PageResponse pagination      = 2;
}

message QueryStreamPaymentRequest {
  string id = 1;
}

message QueryStreamPaymentResponse {
  StreamPayment stream_payment = 1;
}

message QueryParamsRequest {}

message QueryParamsResponse {
  Params params = 1;
}
