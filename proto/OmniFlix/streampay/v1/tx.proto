syntax = "proto3";
package OmniFlix.streampay.v1;

import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "OmniFlix/streampay/v1/params.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "OmniFlix/streampay/v1/streampay.proto";

option go_package = "github.com/OmniFlix/streampay/x/streampay/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc StreamSend(MsgStreamSend) returns (MsgStreamSendResponse);
  rpc StopStream(MsgStopStream) returns (MsgStopStreamResponse);
  rpc ClaimStreamedAmount(MsgClaimStreamedAmount) returns (MsgClaimStreamedAmountResponse);

  // UpdateParams defines a governance operation for updating the x/streampay module
  // parameters. The authority is hard-coded to the x/gov module account.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}


message MsgStreamSend {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name)           = "OmniFlix/streampay/MsgStreamSend";
  option (gogoproto.equal)      = false;

  string sender = 1;
  string recipient = 2;
  cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
  google.protobuf.Duration duration = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true
  ];
  StreamType stream_type = 5 [(gogoproto.moretags) = "yaml:\"stream_type\""];
  repeated Period periods = 6 [(gogoproto.nullable) = true];
  bool cancellable = 7;
  cosmos.base.v1beta1.Coin payment_fee = 8 [
    (gogoproto.moretags) = "yaml:\"payment_fee\"",
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
}

message MsgStreamSendResponse {
  string stream_id = 1 [(gogoproto.moretags) = "yaml:\"stream_id\""];
}

message MsgStopStream {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name)           = "OmniFlix/streampay/MsgStopStream";
  option (gogoproto.equal)      = false;

  string stream_id = 1 [(gogoproto.moretags) = "yaml:\"stream_id\""];
  string sender = 2;
}

message MsgStopStreamResponse {}

message MsgClaimStreamedAmount {
  option (cosmos.msg.v1.signer) = "claimer";
  option (amino.name)           = "OmniFlix/streampay/MsgClaimStream";
  option (gogoproto.equal)      = false;

  string stream_id = 1 [(gogoproto.moretags) = "yaml:\"stream_id\""];
  string claimer = 2;
}

message MsgClaimStreamedAmountResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/streampay parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}