syntax = "proto3";
package OmniFlix.streampay.v1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

import "streampay/streampay.proto";

option go_package = "github.com/OmniFlix/streampay/x/streampay/types";

// Msg defines the Msg service.
service Msg {
  rpc StreamSend(MsgStreamSend) returns (MsgStreamSendResponse);
  rpc StopStream(MsgStopStream) returns (MsgStopStreamResponse);
}


message MsgStreamSend {
  string                    sender      = 1;
  string                    recipient   = 2;
  cosmos.base.v1beta1.Coin  amount      = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coin"
  ];
  google.protobuf.Timestamp end_time    = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime)  = true,
    (gogoproto.moretags) = "yaml:\"end_time\""
  ];
  PaymentType               stream_type = 5 [(gogoproto.moretags) = "yaml:\"stream_type\""];
}
message MsgStreamSendResponse {
}

message MsgStopStream {
  string                    stream_id      = 1[(gogoproto.moretags) = "yaml:\"stream_id\""];
  string                    sender   = 2;
}

message MsgStopStreamResponse {
}
